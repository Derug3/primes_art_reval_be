on:
  push:
    branches:
      - master
#      - chain-integration

jobs:
  deploy:
    name: 'Deploy'
    runs-on: ubuntu-latest

    env:
      DOCKER_COMPOSE_FILE: docker-compose.production.yml

    steps:
      - name: Setup prod work dir
        if: ${{ github.ref == 'refs/heads/master' }}
        run: echo "WORK_DIR=${{ secrets.WORK_DIR_PROD }}" >> $GITHUB_ENV

#      - name: Setup stage work dir
#        if: ${{ github.ref == 'refs/heads/chain-integration' }}
#        run: echo "WORK_DIR=${{ secrets.WORK_DIR_STAGE }}" >> $GITHUB_ENV

      - name: Install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - name: Connect to server and run deploy
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ env.WORK_DIR }} && git checkout "${GITHUB_REF##*/}" && git fetch origin && git reset --hard "${GITHUB_REF##*/}" && git pull origin "${GITHUB_REF##*/}" && docker compose -f "${{ env.DOCKER_COMPOSE_FILE }}" up -d --build --remove-orphans && docker compose -f "${{ env.DOCKER_COMPOSE_FILE }}" ps && exit"

      - name: cleanup
        run: rm -rf ~/.ssh
